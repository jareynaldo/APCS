<+> I had a fun time setting up this comeplexety in the code and 
looking at how interconnective it all is. I also enjoyed writting 
methods to incorporate the change in units. 

<-> I had a diffuclt time with the printf formating and took me 
a while to get used to this new type of notation. But i managed 
to persevere and finshed got it done. I actually also spent a 
lot of time attempting using logic to ensure that you woudn't 
convert a Cel to Cel, but then i realized that since the input 
data would always be the same units that was unnecessary.

+ Here i learned a lot, from using printf to format strings and 
doubles, to using datasets to create objects which can then be 
manipulated. 


/**
 * Annual Weather client class
 * 
 * @author Jose Reynaldo
 * @version 1/06/23
 */
import java.util.Scanner;

public class CityWeatherTesterV2 {

        public static void printMethod(String city, String state, String tempLabel, String precipLabel,
                        double[] temperature, double[] precepitation, String[] month, double averageTemp,
                        double averagePrecep) {
                System.out.println();
                System.out.printf("%35s %n", "Weather Data");
                System.out.printf("%30s %s, %s %n", "Location:", city, state);
                System.out.println("Month:  \t  Temperature (" + tempLabel + ") \t  Precipitation (" +
                                precipLabel + ")");
                System.out.println();
                System.out.println("************************************************************");
                System.out.println();
                for (int i = 0; i < temperature.length; i++) {

                        // use printf to format
                        System.out.printf("%3s.  %27.1f %25.1f", month[i], temperature[i], precepitation[i]);
                        System.out.println();
                }
                System.out.println("************************************************************");
                System.out.printf("\tAverage:  \tTotal: %3.2f", averageTemp, averagePrecep);
        }

        public static void main(String[] args) {

                Scanner in = new Scanner(System.in); // will be used in 6.02
                String city = "Miami";
                String state = "FL";

                String[] month = { "Jan", "Feb", "Mar", "Apr", "May",
                                "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }; // complete initialization of months
                                                                                   // array
                double[] temperature = { 68.1, 69.1, 72.4, 75.7, 79.6, 82.4,
                                83.7, 83.6, 82.4, 78.8, 74.4, 69.9 }; // complete initialization of temperatures array
                double[] precipitation = { 1.9, 2.1, 2.6, 3.4, 5.5, 8.5, 5.8,
                                8.6, 8.4, 6.2, 3.4, 2.2 };
                String tempLabel = "F"; // initialize to F
                String precipLabel = "I"; // initialize to in

                CityWeatherV2 city1 = new CityWeatherV2(month, temperature, precipitation);

                // input to decide F/C and in/cm - to be completed in 6.02

                System.out.print("Choose the temperature scale (F = Fahrenheit, C = Celsius): ");
                tempLabel = in.nextLine().toUpperCase();

                if (tempLabel.equalsIgnoreCase("C")) {
                        city1.ConvertToCelc();
                }

                // city1.ConvertingTemps(tempLabel);S
                System.out.print("Choose the Precipitation scale (I = Inches, C = Centimeters): ");
                precipLabel = in.nextLine().toUpperCase();

                if (precipLabel.equalsIgnoreCase("C")) {
                        city1.ConvertToCem();
                }

                printMethod(city, state, tempLabel, precipLabel, temperature, precipitation, month, city1.tempCalc(),
                                city1.precepCalc());

        }
}




/**
 * Annual Weather object class
 * 
 * @author Jose Reynaldo
 * @version 1/06 /23
 */

public class CityWeatherV2 {
    // private instance variables - three arrays
    private String myMonth[];
    private double myTemp[];
    private double myPrecep[];

    // constructor with parameters
    public CityWeatherV2(String month[], double temp[], double precepitation[]) {

        myMonth = month;
        myTemp = temp;
        myPrecep = precepitation;
    }

    // setters and getters for each private instance variable

    public String[] getMonth() {
        return myMonth;
    }

    public double[] getTemp() {
        return myTemp;
    }

    public double[] getPrecepitation() {
        return myPrecep;
    }

    public void setMonth(String[] month) {
        myMonth = month;
    }

    public void setTemp(double[] temp) {
        myTemp = temp;
    }

    public void setPrecepiataion(double[] precepitation) {
        myPrecep = precepitation;
    }

    // method to calculate the average of temperature
    public double tempCalc(double temp[]) {

        double sum = 0;
        for (int i = 0; i < temp.length; i++) {
            sum += temp[i];
        }
        sum = sum / myTemp.length;
        return sum;
    }

    public double tempCalc() {

        double sum = 0;
        for (int i = 0; i < myTemp.length; i++) {
            sum += myTemp[i];
        }

        return sum / myPrecep.length;
    }

    // method to calculate total precipitation array
    public double precepCalc(double precepitation[]) {

        double sum = 0;
        for (int i = 0; i < precepitation.length; i++) {
            sum += precepitation[i];
        }
        return sum / precepitation.length;
    }

    public double precepCalc() {

        double sum = 0;
        for (int i = 0; i < myPrecep.length; i++) {
            sum += myPrecep[i];
        }
        return sum / myPrecep.length;
    }

    // method to calculate temperature in Celsius (current index of temperature
    // array passed as a parameter) - to be completed in 6.02

    public void ConvertToCelc() {

        for (int i = 0; i < myTemp.length; i++) {
            myTemp[i] = (myTemp[i] - 32) * .5556;
        }
    }

    public void ConvertToCem() {
        for (int i = 0; i < myPrecep.length; i++) {
            myPrecep[i] = myPrecep[i] * 2.54;
        }
    }
}
